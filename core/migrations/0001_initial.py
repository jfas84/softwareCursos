# Generated by Django 3.2.17 on 2024-02-22 20:40

import core.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('nome', models.CharField(max_length=180, verbose_name='Nome Completo')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Membro da equipe')),
                ('aprovado', models.BooleanField(default=False, verbose_name='Aprovado?')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', core.models.UsuarioManager()),
            ],
        ),
        migrations.CreateModel(
            name='Apostilas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apostila', models.CharField(max_length=100, verbose_name='Apostila')),
                ('arquivo', models.FileField(upload_to=core.models.get_file_path, verbose_name='Arquivo')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=100, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Apostila',
                'verbose_name_plural': 'Apostilas',
            },
        ),
        migrations.CreateModel(
            name='Aulas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aula', models.CharField(max_length=100, verbose_name='Aula')),
                ('objetivo', models.TextField(verbose_name='Objetivo')),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
            },
        ),
        migrations.CreateModel(
            name='Cursos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curso', models.CharField(max_length=150, verbose_name='Curso')),
                ('valor', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor da Venda')),
                ('externo', models.BooleanField(default=False, verbose_name='Curso para cliente?')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('resumo', models.CharField(blank=True, max_length=150, null=True, verbose_name='Resumo')),
                ('imagem', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to=core.models.get_file_path, variations={'thumb': (225, 225)}, verbose_name='Imagem')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
            },
        ),
        migrations.CreateModel(
            name='Empresas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado', models.DateField(auto_now_add=True, verbose_name='Data de Criação')),
                ('modificado', models.DateField(auto_now=True, verbose_name='Data de Atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('razaoSocial', models.CharField(max_length=300, verbose_name='Razão Social')),
                ('nomeFantasia', models.CharField(blank=True, max_length=300, null=True, verbose_name='Nome Fantasia')),
                ('cnpj', models.CharField(max_length=15, verbose_name='CNPJ')),
                ('endereco', models.CharField(max_length=300, verbose_name='Endereço')),
                ('cidade', models.CharField(max_length=300, verbose_name='Cidade')),
                ('bairro', models.CharField(max_length=300, verbose_name='Bairro')),
                ('estado', models.CharField(max_length=2, verbose_name='Estado')),
                ('cep', models.CharField(max_length=8, verbose_name='CEP')),
                ('dataFundacao', models.DateField(verbose_name='Data da Fundação')),
                ('telefone', models.CharField(max_length=13, verbose_name='Telefone')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('responsavel', models.CharField(blank=True, max_length=300, null=True, verbose_name='Responsável')),
                ('contato', models.CharField(blank=True, max_length=300, null=True, verbose_name='Contato')),
                ('logo', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to=core.models.get_file_path, variations={'thumb': (225, 225)}, verbose_name='Logomarca')),
                ('data', models.DateField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
            },
        ),
        migrations.CreateModel(
            name='Responsaveis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(choices=[('GESTORGERAL', 'Gestor Geral'), ('COLABORADORSEDE', 'Colaborador Sede'), ('SECRETARIA', 'Secretaria'), ('JURIDICO', 'Jurídico'), ('GESTORCURSO', 'Gestor Curso'), ('PRODUTOR', 'Produtor Conteúdo'), ('PROFESSOR', 'Professor'), ('ALUNO', 'Aluno')], max_length=150, verbose_name='Descrição da Responsabilidade')),
            ],
            options={
                'verbose_name': 'Responsável',
                'verbose_name_plural': 'Responsáveis',
            },
        ),
        migrations.CreateModel(
            name='TiposCurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=150, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Tipo de Curso',
                'verbose_name_plural': 'Tipos de Curso',
            },
        ),
        migrations.CreateModel(
            name='VideoAulas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videoAula', models.CharField(max_length=100, verbose_name='Video aula')),
                ('linkVimeo', models.URLField(blank=True, max_length=250, null=True, verbose_name='Link do Vimeo')),
                ('idYouTube', models.CharField(blank=True, max_length=100, null=True, verbose_name='Id do You Tube')),
                ('aula', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.aulas')),
            ],
            options={
                'verbose_name': 'Vídeo Aula',
                'verbose_name_plural': 'Vídeo Aulas',
            },
        ),
        migrations.CreateModel(
            name='Temas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tema', models.CharField(max_length=100, verbose_name='Tema')),
                ('texto', models.TextField(verbose_name='Objetivo')),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.aulas')),
            ],
            options={
                'verbose_name': 'Tema',
                'verbose_name_plural': 'Temas',
            },
        ),
        migrations.CreateModel(
            name='Questoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pergunta', models.TextField(verbose_name='Pergunta')),
                ('resposta1', models.TextField(verbose_name='Resposta 1')),
                ('resposta2', models.TextField(verbose_name='Resposta 2')),
                ('resposta3', models.TextField(blank=True, null=True, verbose_name='Resposta 3')),
                ('resposta4', models.TextField(blank=True, null=True, verbose_name='Resposta 4')),
                ('resposta5', models.TextField(blank=True, null=True, verbose_name='Resposta 5')),
                ('certoErrado', models.BooleanField(default=False, verbose_name='Modelo Certo Errado?')),
                ('imagem', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to=core.models.get_file_path, variations={'thumb': (225, 225)}, verbose_name='Imagem')),
                ('resposta_correta', models.CharField(blank=True, choices=[('resposta1', 'Alternativa A'), ('resposta2', 'Alternativa B'), ('resposta3', 'Alternativa C'), ('resposta4', 'Alternativa D'), ('resposta5', 'Alternativa E')], max_length=10, null=True, verbose_name='Resposta Correta')),
                ('apostila', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.apostilas')),
                ('aula', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.aulas')),
            ],
            options={
                'verbose_name': 'Questão',
                'verbose_name_plural': 'Questões',
            },
        ),
        migrations.CreateModel(
            name='LogErro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data do Erro')),
                ('pagina_atual', models.CharField(max_length=255, verbose_name='Página Atual')),
                ('mensagem_erro', models.TextField(verbose_name='Mensagem de Erro')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário do Erro')),
            ],
            options={
                'verbose_name': 'Log de Erro',
                'verbose_name_plural': 'Logs de Erros',
            },
        ),
        migrations.CreateModel(
            name='Inscricoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pago', models.BooleanField(default=False, verbose_name='Pago?')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cursos')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inscrição',
                'verbose_name_plural': 'Inscrições',
            },
        ),
        migrations.CreateModel(
            name='FrequenciaAulas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.aulas')),
            ],
            options={
                'verbose_name': 'Frequência na Aula',
                'verbose_name_plural': 'Frequência nas Aulas',
            },
        ),
        migrations.AddField(
            model_name='cursos',
            name='empresa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.empresas'),
        ),
        migrations.AddField(
            model_name='cursos',
            name='tipoCurso',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.tiposcurso'),
        ),
        migrations.CreateModel(
            name='Capitulos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capitulo', models.CharField(max_length=100, verbose_name='Capítulo')),
                ('objetivo', models.TextField(verbose_name='Objetivo')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cursos')),
            ],
            options={
                'verbose_name': 'Capítulo',
                'verbose_name_plural': 'Capítulo',
            },
        ),
        migrations.CreateModel(
            name='Boletim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.DecimalField(decimal_places=2, max_digits=5)),
                ('aprovado', models.BooleanField(default=False)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cursos')),
            ],
            options={
                'verbose_name': 'Boletim',
                'verbose_name_plural': 'Boletins',
            },
        ),
        migrations.AddField(
            model_name='aulas',
            name='capitulo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.capitulos', verbose_name='Capítulo'),
        ),
        migrations.AddField(
            model_name='apostilas',
            name='curso',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cursos'),
        ),
        migrations.AddField(
            model_name='customusuario',
            name='empresa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.empresas', verbose_name='Empresa'),
        ),
        migrations.AddField(
            model_name='customusuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customusuario',
            name='responsabilidades',
            field=models.ManyToManyField(blank=True, to='core.Responsaveis'),
        ),
        migrations.AddField(
            model_name='customusuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
